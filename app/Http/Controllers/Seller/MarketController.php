<?phpnamespace App\Http\Controllers\Seller;use App\Http\Controllers\Controller;use Illuminate\Foundation\Auth\AuthenticatesUsers;use GeneaLabs\LaravelSocialiter\Facades\Socialiter;use Socialite;use App\Models\User;use App\Models\Customer;use App\Models\Cart;use App\Services\SocialRevoke;use Session;use Illuminate\Http\Request;use CoreComponentRepository;use Illuminate\Support\Facades\Http;use Illuminate\Support\Str;use GuzzleHttp\Client;use Auth;use Storage;use App\Models\Product;use App\Models\SellerCategoryPreference;use Illuminate\Support\Facades\Hash;class MarketController extends Controller {        public function index(){      $products = Product::take(10)->get();      $data = [        'products' => $products        ];        return view('seller.market.index', $data);    }   public function get_market_products(Request $request)     {                $page = $request->page ?? 1;        // Fetch the preferred category IDs for the authenticated user        $preferencedCategoryIds = SellerCategoryPreference::where('user_id', Auth::id())            ->where('status', 1)            ->pluck('category_id'); // Assuming 'category_id' is the column for the category            // Initialize the query for products        $query = Product::whereIn('category_id', $preferencedCategoryIds);            // Apply search filter if the search parameter is present        if ($request->has('search') && !empty($request->search)) {            $search = $request->search;            $query->where(function ($q) use ($search) {                $q->where('name', 'LIKE', "%$search%") // Assuming 'name' is a column                  ->orWhere('description', 'LIKE', "%$search%"); // Assuming 'description' is a column            });        }            // Paginate the results with a default of 10 items per page        $products = $query->paginate(60, ['*'], 'page', $page);                // $thumbnail_url = $product->thumbnail != null ? my_asset($product->thumbnail->file_name) : static_asset('assets/img/placeholder.jpg') ;           // Modify the product data to include the thumbnail URL        $products->getCollection()->transform(function ($product) {                        $product->thumbnail_url = $product->thumbnail                 ? my_asset($product->thumbnail->file_name)                 : static_asset('assets/img/placeholder.jpg');            $product->product_url =   route('product', $product->slug);             $product->brand_name =   $product->brand->name;                             return $product;        });        return response()->json($products);    }}